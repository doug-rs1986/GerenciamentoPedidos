@model GerenciamentoPedidos.DTOs.PedidoDto
@using GerenciamentoPedidos.Models
@using Newtonsoft.Json
@inject GerenciamentoPedidos.Data.IClienteRepository ClienteRepo
@inject GerenciamentoPedidos.Data.IProdutoRepository ProdutoRepo
@{
    ViewData["Title"] = "Novo Pedido";
    var clientes = ClienteRepo.GetAllAsync().Result;
    var produtos = ProdutoRepo.GetAllAsync().Result;
}
<h1>Novo Pedido</h1>
<form asp-action="Create" method="post">
    <div class="mb-3">
        <label for="ClienteId" class="form-label">Cliente</label>
        <select asp-for="ClienteId" class="form-control" required>
            <option value="">Selecione...</option>
            @foreach (var cliente in clientes)
            {
                <option value="@cliente.Id">@cliente.Nome (@cliente.Email)</option>
            }
        </select>
        <span asp-validation-for="ClienteId" class="text-danger"></span>
    </div>
    <div id="itens-pedido">
        <h4>Produtos</h4>
        <div class="row mb-2">
            <div class="col">
                <select name="Itens[0].ProdutoId" class="form-control" required>
                    <option value="">Selecione o produto...</option>
                    @foreach (var produto in produtos)
                    {
                        <option value="@produto.Id">@produto.Nome (@produto.Preco.ToString("C")) - Estoque: @produto.QuantidadeEstoque</option>
                    }
                </select>
            </div>
            <div class="col">
                <input type="number" name="Itens[0].Quantidade" class="form-control" min="1" placeholder="Quantidade" required />
            </div>
        </div>
        <!-- EspaÃ§o para adicionar mais produtos via JS -->
    </div>
    <button type="button" class="btn btn-secondary mb-3" onclick="addProduto()">Adicionar Produto</button>
    <div class="mb-3">
        <label asp-for="Status" class="form-label">Status</label>
        <select asp-for="Status" class="form-control">
            <option value="Novo">Novo</option>
            <option value="Processando">Processando</option>
            <option value="Finalizado">Finalizado</option>
        </select>
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-success">Salvar</button>
    <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
</form>
@section Scripts {
    <script>
        let itemIndex = 1;
        function addProduto() {
            const produtos = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(produtos));
            const row = document.createElement('div');
            row.className = 'row mb-2';
            row.innerHTML = `
                <div class='col'>
                    <select name='Itens[${itemIndex}].ProdutoId' class='form-control' required>
                        <option value=''>Selecione o produto...</option>
                        ${produtos.map(p => `<option value='${p.Id}'>${p.Nome} (${p.Preco.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}) - Estoque: ${p.QuantidadeEstoque}</option>`).join('')}
                    </select>
                </div>
                <div class='col'>
                    <input type='number' name='Itens[${itemIndex}].Quantidade' class='form-control' min='1' placeholder='Quantidade' required />
                </div>
            `;
            document.getElementById('itens-pedido').appendChild(row);
            itemIndex++;
        }
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
